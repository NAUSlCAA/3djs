<!DOCTYPE html>
<html>
<head>
  <title>title</title>
  <style>
body { 
    margin: 0; 
    height: 100vh;
}
  
canvas { 
    display: block;
}
  </style>
</head>
<body>
<script src="https://cdnjs.cloudflare.com/ajax/libs/three.js/102/three.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/dat-gui/0.7.5/dat.gui.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/gsap/2.1.2/TweenMax.min.js"></script>
<script>
	var scene = new THREE.Scene();
	
	var camera = new THREE.PerspectiveCamera(75,window.innerWidth/window.innerHeight, 0.1, 1000);
	camera.position.z = 5
	
	var renderer = new THREE.WebGLRenderer({
			antialias: true,
			alpha: true
	});
	renderer.setClearColor("#e5e5e5");
	renderer.setSize(window.innerWidth,window.innerHeight);
	
	document.body.appendChild(renderer.domElement);
	
		window.addEventListener('resize', () => {
            renderer.setSize(window.innerWidth,window.innerHeight);
            camera.aspect = window.innerWidth / window.innerHeight;

            camera.updateProjectionMatrix();
        })
		var raycaster=new THREE.Raycaster();
		var mouse = new THREE.Vector2();
		 
		
        var geometry = new THREE.SphereGeometry(1, 50, 50);
		
        var material = new THREE.MeshLambertMaterial({color: 0xFFCC00});
		//var mesh = new THREE.Mesh(geometry, material);
		
		meshX = -10;
		for(var i = 0; i<15; i++){
			var mesh = new THREE.Mesh(geometry, material);
					mesh.position.x = (Math.random() - 0.5)*10;
					mesh.position.y = (Math.random() - 0.5)*10;
					mesh.position.z = (Math.random() - 0.5)*10;
					scene.add(mesh);
					meshX+=1;
		}



		mesh.rotation.set(45,0,0);
		mesh.scale.set(1,2,1)

		scene.add(mesh);
		
        var light = new THREE.PointLight(0xFFFFFF, 1, 500)
        light.position.set(0,0,25);
        scene.add(light);
		
		  renderer.render(scene, camera);
		var render = function() {
            requestAnimationFrame(render);
			mesh.rotation.x += 0.1;
			mesh.rotation.y += 0.01;

            renderer.render(scene, camera);
		 }

		 function onMouseMove(event){
		 	 event.preventDefault();
			 mouse.x = (event.clientX / window.innerWidth)*2 -1;
			 mouse.y = - (event.clientY / window.innerHeight)*2 +1;

			 raycaster.setFromCamera(mouse, camera);

			 var intersects = raycaster.intersectObjects(scene.children, true);
			 for (var i=0; i<intersects.length; i++){
			 //intersects[i].object.material.color.set(0Xff0000)
			this.tl = new TimelineMax({});
			this.tl.to(intersects[i].object.scale, 1, {x:2, ease:Expo.easeOut})
			this.tl.to(intersects[i].object.scale, .5, {x:.5, ease:Expo.easeOut})
			this.tl.to(intersects[i].object.position, 1, {x:2, ease:Expo.easeOut})
			this.tl.to(intersects[i].object.roation, .5, {y: Math.PI*5, ease:Expo.easeOut})
			 }
		 }

		 render();

//		 this.tl =new TImelineMax().delay(.3);
//		this.tl = new TimelineMax({paused: true});
//		 this.tl.to(this.mesh.scale, 1, {x:2, ease:Expo.easeOut})

		 window.addEventListener('mousemove', onMouseMove);



</script>
</body>
</html>